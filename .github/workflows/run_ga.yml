name: run-ga

on:
  workflow_dispatch:
    inputs:
      model:           {type: choice, options: [logreg_en, linsvc, rf], default: logreg_en}
      population_size: {type: number, default: 80}
      generations:     {type: number, default: 40}
      crossover_prob:  {type: number, default: 0.8}
      mutation_prob:   {type: number, default: 0.05}

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with: { python-version: '3.10' }

      - name: Install deps
        run: |
          python -V
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download GEO
        run: |
          mkdir -p data/raw
          curl -L -o data/raw/GSE45827_series_matrix.txt.gz https://ftp.ncbi.nlm.nih.gov/geo/series/GSE45nnn/GSE45827/matrix/GSE45827_series_matrix.txt.gz
          curl -L -o data/raw/GSE45827_family.soft.gz        https://ftp.ncbi.nlm.nih.gov/geo/series/GSE45nnn/GSE45827/soft/GSE45827_family.soft.gz
          curl -L -o data/raw/GPL570.annot.gz                https://ftp.ncbi.nlm.nih.gov/geo/platforms/GPLnnn/GPL570/annot/GPL570.annot.gz

      - name: Patch config
        run: |
          python - <<'PY'
          import yaml
          with open("config.yaml","r",encoding="utf-8") as f: cfg = yaml.safe_load(f)
          g = cfg["ga"]
          g["population_size"] = int(float("${{ github.event.inputs.population_size || 80 }}"))
          g["generations"]     = int(float("${{ github.event.inputs.generations     || 40 }}"))
          g["crossover_prob"]  = float("${{ github.event.inputs.crossover_prob     || 0.8 }}")
          g["mutation_prob"]   = float("${{ github.event.inputs.mutation_prob      || 0.05 }}")
          cfg["allow_download"] = False
          with open("config.yaml","w",encoding="utf-8") as f: yaml.safe_dump(cfg,f,sort_keys=False)
          PY

      - name: Run 01â€“07
        run: |
          python - <<'PY'
          import json, pathlib
          from src.utils import load_cfg
          import src.step01_reading_data as s1, src.step02_preprocessing as s2
          import src.step03_cohort as s3, src.step04_split as s4, src.step05_baseline as s5
          import src.step06_GA_feature_selection as s6, src.step07_model_selection as s7
          c = load_cfg('config.yaml'); P = c['paths']
          R = {}
          R["s1"]=s1.run(c,P); R["s2"]=s2.run(c,P); R["s3"]=s3.run(c,P)
          R["s4"]=s4.run(c,P); R["s5"]=s5.run(c,P)
          R["s6"]=s6.run(c,P)
          R["s7"]=s7.run(c,P, model="${{ github.event.inputs.model }}")
          out = pathlib.Path("docs/data"); out.mkdir(parents=True, exist_ok=True)
          (out/"results.json").write_text(json.dumps(R, indent=2))
          PY

      - name: Build site data
        run: python tools/prepare_web.py

      - name: Verify docs
        run: |
          ls -R docs
          test -f docs/index.html
          test -f docs/data/results.json

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with: { path: docs }

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
